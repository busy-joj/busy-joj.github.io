---
layout: post
title: Vue - 컴포넌트 속성 상속
date: 2022-06-15 22:35:18 +0900
category: Framework
---

### <span style="color:#febc68;font-weight:bold">속성 상속</span> 

부모 컴포넌트의 template의 클래스 혹은 기타 속성이 자식 컴포넌트의 속성으로 상속된다.  
 ```html
  <!-- 부모 컴포넌트 = App.vue -->
  <template>
    <MyBtn class="heory" style="color: red">
      Banana
    </MyBtn>
  </template>

  <script>
    import MyBtn from '~/components/MyBtn'
    export default {
      components: {
        MyBtn
      }
    }
  </script>
  ``` 
 ```html
 <!-- 자식 컴포넌트 = Mybtn.vue -->
  <template>
    <div class="btn">
      <slot></slot>
    </div>
  </template>

  <script>
    export default {
      
    }
  </script>

  <style scoped lang="scss">
    .btn {
      display: inline-block;
      margin: 4px;
      padding: 6px 12px;
      border-radius: 4px;
      background-color: gray;
      color: white;
      cursor: pointer;
    }
  </style>
  ``` 
위와 같이 부모 컴포넌트의 속성이 자식 컴포넌트로 잘 상속되는 것을 볼 수 있다.
자식 컴퍼넌트에 template 태그 바로 아래에 오는 자식요소를 최상위요소(루트 요소)라고 한다.
최상위 요소가 하나뿐이라면, 부모 컴포넌트에 입력한 속성 값이 문제없이 상속되지만,
최상위 요소가 2개 이상일 때는 어느 요소에 상속되어야하는지 판단할 수 없기 때문에 모든 요소에 상속되지 않게 된다. 

### <span style="color:#febc68;font-weight:bold">inheritAttrs</span>   
위와 같은 문제를 해결(?), 정리(?)할 수 있는 방법이 있는데,  
inheritAttrs 속성을 자식 컴포넌트 스크립트 옵션으로 작성해주는 것이다.

```html
 <!-- 자식 컴포넌트 = Mybtn.vue -->
  <script>
    export default {
      //상속하지 않겠다!!!!는 옵션
      inheritAttrs : false
    }
  </script>

  ```  
'inheritAttrs:false'는 최상위요소가 한 개이든 여러개이든 부모 컴포넌트로 부터 어떠한 속성도 상속받지 않는 상태로 만들어 준다.

### <span style="color:#febc68;font-weight:bold">created</span> 
최상위요소가 여러개이지만, 어떤 속성을 상속받고 싶을 때는 'created'를 사용해보자  
여기서 말하는 'created'는 라이프사이클 훅의 'created', 컴포넌트가 직생된 직후를 의미한다.   

```html
 <!-- 자식 컴포넌트 = Mybtn.vue -->
   <template>
    <div class="btn">
      {{ 바나나 }}
    </div>
    <!-- 다른 표현방식, 같은 출력물 -->
    <h1 :class="$attrs.class" :style="$attrs.style"></h1>
    <h1 v-bind="$attrs"></h1>
  </template>

  <script>
    export default {
      inheritAttrs : false
      created (){
        // $attrs에 담긴 부모 컴퍼넌트의 속성을 created를 이용해 확인하여 이용한다.
        console.log(this.$attrs)
      }
    }
  </script>

  ```  
