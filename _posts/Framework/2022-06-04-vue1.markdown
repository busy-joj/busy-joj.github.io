---
layout: post
title: Vue - 시작하기, 설치 방법
date: 2022-06-04 20:40:23 +0900
category: Javascript
---

### <span style="color:#febc68;font-weight:bold">시작이 반이닷!!!!!</span>  
 
## <span style="color:#97cab3;font-weight:bold">설치방법</span>

 1. CDN  
   = 간단한 연습 프로젝트나 문법 확인용이라면, CDN을 이용하여 바로 Vue.js를 사용할 수 있다.
   
    ```html
      <script src = "https://unpkg.com/vue@next"></script>
    ```
 2. CLI (Command-Line Interface)  
   = CMD, Terminal 창이 바로 CLI를 제공하는 프로그램이다.  
   = npm에서 제공되는 cli를 설치하여야 한다.  
   = 내부적으로 Webpack을 사용하고 있고, 기본적인 옵션은 숨겨져있다.
   = 구성옵션이 제공되기 때문에 문법에만 집중하여 사용할 수 있다는 장점이 있지만, 세부적인 옵션을 정리하면서 나만의 프로젝트를 구성하지 못한다는 것이 단점이다.

    ```bash
      npm install -g @vue/cli
    ```  
    = [Vue CLI 바로가기](https://cli.vuejs.org/)

    *명령어*  
    - vue create : vue 프로젝트 폴더 생성할때 
      ```bash
          vue create 원하는 폴더명
      ```  

    - serve  : Compiles and hot-reloads for development / 개발 서버를 오픈할 때   
    - build : Compiles and minifies for production / 제품화 할 때  
    - test : Run your tests / 테스트 할 때  
    - lint : Lints and fixes files / 규칙에 맞게 작성되었는지 확인 할 때  -> 'package.json'에서 'eslintConfig'가 lint명령에 대한 규칙

<br/>
<br/>
= vsc 에서 Vue파일을 열었을 때 하이라이팅이 전혀 되어있지 않기 때문에, 확장 프로그램인 Vetur를 설치한다  

  2. webpack 기반
  = 
      ```bash
          npx degit 'git 저장소명' '로컬에 저장될 폴더명'
      ```  
  = 실제로 브라우저에서 동작하는 패키지이기 때문에 개발의존성이 아닌 일반 의존성으로 설치하며, @next 입력하여 최신버전으로 설치
      ```bash
        npm i vue@next
    ```  
  = vue.js패키지는 vue문법을 해석하기 위함이기 때문에, vue파일을 프로젝트 내에서 관리하려면 추가적인 패키지가 필요하다.   
      ```bash
      npm i -D vue-loader@next vue-style-loader @vue/compiler-sfc
    ```  

  = 설치 후 webpack.config.js에서 옵션을 바꿔주자
    ```javascript
      rules: [
            { 
              //vue가 해석될수 있게 추가
              test: /\.vue$/,
              use: 'vue-loader'
            },
            {
              //스타일이 해석될 수 있게 추가
              test:/\.s[ac]ss$/i,
              use:[
                  'vue-style-loader'
              ]
            },
      ]
    ``` 
    ```javascript
    //plugin을 가지고 와서 실행하기 위해 추가
    const { VueLoaderPlugin } = require('vue-loader')
    plugins:[
        new VueLoaderPlugin()
    ]
    ``` 
    = components를 만들어보자!


    = 특정 파일을 읽어서 브라우저에 출력해주는 webpack loader 
      ```bash
      npm i -D file-loader
    ``` 
    =eslint?
      ```bash
      npm i -D eslint eslint-plugin-vue babel-eslint
    ``` 
    = 설치 후 .eslintrc.js에서 옵션 쓰자
     ```javascript
        module.exports = {
        env :{
            browser: true,
            node: true
        },
        //코드 검사를 할 기본적인 규칙
        extends:[
            //vue
            //'plugin:vue/vue3-essential' // 엄격 lv1
            'plugin:vue/vue3-strongly-recommended', // 엄격 lv2
            //'plugin:vue/vue3-recommended' // 엄격 lv3
            //js
            'eslint : recommended'
        ],
        parserOption: {
            //코드를 분석할 수 있는 분석기를 지정해주자
            parser: 'babel-eslint'
        },
        rules:{
            //extends에서 선택한 옵션 중 불필요한 사항이 있을때 작성하면 된다.
        }
    }
    ``` 