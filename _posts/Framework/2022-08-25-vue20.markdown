---
layout: post
title: Vue - Tab과 content
date: 2022-08-24 18:35:15 +0900
category: Framework
---

### <span style="color:#febc68;font-weight:bold">vue를 이용해서 tab&content를 만들어보자</span> 
기존 slot애서 사용했던 name속성을 지정하여 여러 slot을 사용할 수 있도록 하는 named-slot과  
하위 데이터를 상위 컴포넌트에서 사용하는 slot-scope가  
v-slot 디렉티브가 새롭게 소개되면서, v-slot 하나로 위 기능을 사용할 수 있게 되었다.  
고로, v-slot = named-slot + slot-scope 이다.  
slot과 다른 v-slot의 사용법은 필히 templete 태그로 감싼 후 v-slot을 사용해야 한다는 것이다.    

1. named-slot 표현법
```javascript
// 하위 컴포넌트 ContentTop.vue 파일
<templete>
    <div class="content-top">
      <div class="container">
        <slot name="h2"></slot>

        <slot name="content"></slot>
      </div>
    </div>
</templete>

// 상위 컴포넌트 Main.vue 파일
<template>
    <ContentTop>
      <template v-slot:h2>
        <h2>vue</h2>
      </template>
      <template v-slot:content>
        <p>반갑습니다.</p>
      </template>
    </ContentTop>
```
* v-slot:default는 name 속성을 붙이지 않은 영역에 표현된다.


2. slot-scope 표현법
하위에서 사용했던 slot의 name=""로 감싸진 태그의 함수, 변수 모두 지정한 name에 담아서 가져온다.
```javascript
// 하위 컴포넌트 ItemList.vue 파일
<templete>
    <div class="list-top">
        <ul>
            <template v-for="row in list">
                <li>
                    <slot name="itemList" :row="row"></slot>
                </li>                
            </template>
        </ul>
    </div>
</templete>

// 상위 컴포넌트 List.vue 파일
<templete>
    <ItemList>
        <template v-slot:itemList="itemList">
            {{ itemList.row.name }}
        </template>
    </ItemList>
    <div class="list-top">
        <ul>
            <template v-for="row in list">
                <li>
                    <slot name="itemList" :row="row"></slot>
                </li>                
            </template>
        </ul>
    </div>
</templete>
```