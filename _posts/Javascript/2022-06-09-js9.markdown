---
layout: post
title: 자바스크립트 - DOM Event
date: 2022-06-09 22:14:04 +0900
category: Javascript
---

## <span style="color:#97cab3;font-weight:bold">이벤트?</span>
 = 유저가 웹 사이트를 사용하는 동안 무언가를 클릭하고, 키보드를 누르고, 마우스를 올리는 등에 대한 것!

### <span style="color:#febc68;font-weight:bold">이벤트 타입</span>
 = 이벤트 타입(Event Typg)은 발생한 이벤트의 종류를 나타내는 문자열  

 = 자주 사용되는 이벤트 타입  
 - load : HTML, CSS가 모두 로드 완료되었을 때 발생
 - eydown, keyup : 키를 누를 때, 키에서 손을 땟을 때 발생
 - change : 변동이 있을 때 발생(input..)
 - click : 클릭했을 때 발생
 - focus : 포커스를 얻을 때 발생(input)
   
   <br/>

### <span style="color:#febc68;font-weight:bold">이벤트 리스너 등록</span>
   1. 이벤트의 대상이 되는 객체나 요소에 프로퍼티로 등록하는 방법    
```javascript
        // HTML 태그에 속성으로 등록
        <p onclick="alert('문자열을 클릭했어요!')">이 문자열을 클릭해 보세요!</p>
   ```

   2. 객체나 요소의 메소드에 이벤트 리스너를 전달하는 방법(권장)
   ```javascript
        element.addEventListener(이벤트 타입, 이벤트 핸들러, 이벤트 전파방식)
   ```
   - 이벤트 타입 : 이벤트 리스너를 등록할 이벤트 타입을 문자열로 전달한다.
   - 이벤트 헨들러 : 지정된 이벤트가 발생했을 때 실행할 함수
   - 이벤트 전파방식 : false면 버블링(bubbling) 방식으로, true면 캡처링(capturing) 방식으로 이벤트를 전파한다. 기본값은 false  
   <br/>

### <span style="color:#febc68;font-weight:bold">이벤트 객체</span>  
 = 이벤트 객체는 해당 타입의 이벤트에 대한 상세 정보를 저장하고 있다. 
   ```javascript
   // 이벤트 객체를 console을 통해 확인해보자!
   const showBtn = document.getElementById("btn"); 

   showBtn.addEventListener("click", function (event) {
      console.log(event);
   });
   ```
   <br/>

### <span style="color:#febc68;font-weight:bold">이벤트 전파</span>
 = 이벤트가 발생했을 때 브라우저가 이벤트 리스너를 실행시킬 대상 요소를 결정하는 과정을 의미  
 ![event 설명](../../../../public/img/event1.png)  

1.버블링(bubbling) 전파 방식 
 - 이벤트가 발생한 요소부터 DOM트리를 따라 <span style="color:#f27c88;">위로 올라가며 전파되는 방식</span>
 - 해당 요소의 리스너가 실행된 후, 부모 요소에 등록된 리스너가 실행되고, 이를 Window 객체까지 계속해서 이어진다.
 - 버블링 전파 방식은 다수의 요소에 공통으로 적용되는 이벤트 리스너를 <span style="color:#f27c88;">각각의 요소마다 따로 등록할 필요 없이 공통된 조상 요소에 한 번만 등록하면 처리할 수 있다는 장점을 가진다.</span>

2.캡쳐링(capturing) 전파 방식
 - 이벤트가 발생한 요소까지 DOM트리의 <span style="color:#f27c88;">최상위 부터 아래로 내려가며 전파되는 방식</span>
 - Window 객체의 리스너가 실행된 후, Document 객체에 등록된 리스너, 그 자식 요소의 리스너가 실행되며, 이벤트가 발생한 요소까지 이어진다.
 - 캡쳐링 전파 방식은 실제 이벤트의 대상이 되는 요소에 이벤트가 전달되기 전에 <span style="color:#f27c88;">상위 요소에 등록된 이벤트 리스너가 이를 가로채거나 잡아낼 수 있다. -> 이벤트 취소 기법</span>
 - 이 방식을 사용하기 위해서는 addEventListener() 메소드의 세 번째 인수에 true를 전달하면 된다.


### <span style="color:#febc68;font-weight:bold">이벤트 위임</span>
 = 하위 요소에 이벤트를 붙이지 않고 상위 요소에서 하위 요소의 이벤트를 제어하는 방식