---
layout: post
title: 자바스크립트 - 반복문
date: 2022-05-27 21:06:10 +0900
category: Javascript
---

## <span style="color:#97cab3;font-weight:bold">반복문</span>

= 코드를 원하는 횟수만큼 반복하여 실행한다.
<br/>

### <span style="color:#febc68;font-weight:bold">while문</span>  
 = 조건식이 참인 동안 계속해서 반복

   ```javascript  
      let 변수 = 초깃값;
      while(조건식){
         소스코드
         증감식
      };
      
      let i = 1;
      while(i <= 10>){
         console.loc("안녕");
         i++;
      };
   ```  
### <span style="color:#febc68;font-weight:bold">for문</span>  
 = 초깃값, 조건식, 증감식을 모두 포함하고 있는 반복문  
 = while문보다 간결하게 반복문을 표현할 수 있다.

   ```javascript  
      for(초깃값; 조건식; 증감식){
         소스코드;
      }

      for(let i =1; i<=10; i++){
         console.log(i);
      }
   ```  

### <span style="color:#febc68;font-weight:bold">for - in문, for - of문</span>
= 컨테이너(배열,객체 등)과 사용해보자
1. for - in문
 
   ```javascript  
      const arr = [5, 6, 7, 8];
      for(let index in arr){
         console.log(index); // index 값이 출력 -> 0,1,2,3...
         console.log(arr[index]); // index 값에 해당하는 배열의 값이 출력 -> 0,1,2,3...
      }
   ```  
1. for - of문
 
   ```javascript  
      const arr = [5, 6, 7, 8];
      for(let item of arr){
         console.log(item); // 배열의 값을 차례대로 출력 -> 5,6,7,8...
      }
   ```  
<br/>

### <span style="color:#febc68;font-weight:bold">반복문 제어</span>   
   
1.  break : 반복문이 break를 만나면 반복문을 강제종료한다.
   ```javascript  
      for(let i =1; i<=10; i++){
         if(i >= 5){
            break;   
         }
         console.log(i);
      }
      //5이상이 되면 break를 만나 반복문이 종료됨
      //출력값 : 1,2,3,4
   ```  

1. continue : 반복문이 continue를 만나면 해당 반복은 건너뛰고 실행
   ```javascript  
      for(let i =1; i<=10; i++){
         if(i == 5){
            continue;   
         }
         console.log(i);
      }
      //5에서 continue를 만나 건너뛰고 이어서 다음 코드 실행
      // 출력값 : 1,2,3,4,6,7,8,9,10
   ```  
