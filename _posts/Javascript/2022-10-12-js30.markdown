---
layout: post
title: 자바스크립트 - nullish 병합(nullish coalescing)
date: 2022-10-10 21:31:20 +0900
category: Javascript
---  

## <span style="color:#97cab3;font-weight:bold">nullish 병합</span>

nullish 병합연산자도 옵셔널 체이닝과 같이 스펙에 추가된 지 얼마 되지 않은 따끈따끈한 문법으로,  
??을 사용하면 짧은 문법으로 여러 피연산자 중 그 값이 확정되어있는 변수를 찾을 수 있다.

```javascript
    a ?? b
```    
위의 예시의 경우 a가 null나 undefined가 아니면 a를!! 그 외의 경우는 b를 출력해준다.  

```javascript
    // ??사용
    x = a ?? b
    // ??없이 동일한 작동을 하는 코드
    x = (a !== null && a !== undefined) ? a : b;
```   
??가 없으면 코드의 길이가 길어진다!!  

### <span style="color:#febc68;font-weight:bold">??와 ||의 차이</span>    
nullish 병합 연산자는 or 연산자 ||와 비슷한 듯하지만, 중요한 차이점이 있다.  
* ||는 첫 번째 truthy 값을 반환해준다.  
* ??는 첫 번째 정의된 값을 반환해준다.  
이러한 차이점은 null과 undefined, 숫자 0 을 구분 지어야 할 때 중요한 역할을 한다.  

```javascript
    let width = 0;

    alert(width || 100); // 100
    alert(width ?? 100); // 0
```   

||는 단순히 참과 거짓을 판단해주는 연산자가 아니라 연산에 사용된 피연산자 중 하나를 반환해준다.  
javascript의 falsy 값은 false, null, undefined, 0, -0, 0n, NaN, "" 이기 때문에 이를 제외한 값은 truthy로 판단한다.  
또한 
그로 인해 위의 예시에서 ||는 정수인 100을 반환하는 것이고,  ??는 정의되어있는 width의 값인 0을 반환한것!!  

조금 복잡하지만, 이를 고려해서 사용해야겟다...;;;
