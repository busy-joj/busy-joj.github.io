---
layout: post
title: Vue(8) - 폼 입력 바인딩
date: 2022-06-15 22:35:18 +0900
category: Javascript
---

### <span style="color:#febc68;font-weight:bold">양방향 데이터 바인딩!!</span>  
 = v-model 디렉티브를 사용하면 폼 input과 textarea 엘리먼트에 양방향 데이터 바인딩을 생성할 수 있다.
 = 문자열, 체크박스, 라이도, 셀렉트 모두 사용가능하다.
 = 주의사항 : 한글이 value로 들어올 때는 v-model 사용하는 것 보다 @input 을 사용하여야 한다.

 ```html
  <template>
     <h1>{{ msg }}}</h1>
     <!-- <input type="text"  :value="msg"  @input="handler"/> -->
     <!-- <input type="text"  :value="msg"  @input="msg = $event.target.value"/> -->
     <input type="text"  :value="msg"  v-model="msg"/>

  </template>

  <script>
    export default{
      data(){
        return{
          msg : 'Hello world!!'
        }
      },
      methods: {
        handler(event){
          console.log(event.target.value)
          this.msg = event.target.value
        }
      }
    }
  </script>
  ``` 
### <span style="color:#febc68;font-weight:bold">v-model 수식어</span> 
- .lazy : 값이 전부 입력되고 나서 포커스 아웃이 되었을 때 연결된 데이터가 갱신되게 한다.
- .number : 사용자의 입력값이 숫자로 저장되길 원하는 경우에 사용한다.
- .trim : 제일 앞과 뒤 공백을 제거해야하는 경우에 사용한다.

 ```html
  <template>
     <h1>{{ msg }}}</h1>
     <!-- 같은의미의 코드 -> <input type="text"  :value="msg"  @change="msg = $event.target.value"/> -->
     <input type="text"  :value="msg"  v-model.lazy="msg"/>

  </template>

  <script>
    export default{
      data(){
        return{
          msg : 'Hello world!!'
        }
      }
    }
  </script>
  ``` 