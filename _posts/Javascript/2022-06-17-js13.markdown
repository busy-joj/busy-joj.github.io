---
layout: post
title: 자바스크립트 - 프로토타입(prototype)
date: 2022-06-17 15:08:16 +0900
category: Javascript
---

자바스크립의 객체 지향을 지탱하는 핵심적인 개념이다!  

### <span style="color:#febc68;font-weight:bold">프로토타입 = 원형 </span>  

객체를 상속받기 위해 프로토타입이라는 방식을 사용한다.


자바스크립의 타입에 따라 각각의 프로토타입을 가지고 있다.

```javascript
   Array.prototype
   Object.prototype
   String.prototype
   // 타입별로 다른 prototype이 출력됨을 확인할 수 있다. 
```
데이터를 만드는 방식은 크게 리터럴과 객체 방식이 있다.
- 리터럴 방식은 "" 문자, {} 객체, [] 배열 등 기호를 사용하여 데이터를 만들고, 객체 방식은 new라는 생성 연산자를 이용하여 생성한다.
- 리터럴 방식을 넣으면 자바스크립트 엔진에 의해서 내부에서 객체방식 자동변환되어 실행된다.
```javascript
   //숫자
   var age = 10;
   var age = new Number(10);

   //문자
   var name = "hi";
   var name = new String("hi");

   //배열
   var aryData = ["data1","data2","dat3"];
   var aryData = new Array("data1","data2","dat3");
```

이러한 개념에 기반하여,  

```javascript
   function Name(){};
   
   var n = new Name();

   Name.prototype
```
위 예제를 보면, 생성 연산자 new를 사용하여 Name이라는 새로운 타입의 데이터를 만들어냈다.    
Name이라는 타입도 자신만의 프로토타입을 가지고 있을 것이다.  


이렇게 생성된 데이터에 prototype이라는 메소드를 이용해 prototype을 확인할 수도 새롭게 생성할 수도 기존 메소드를 오염시킬 수도 있다.
```javascript
   // 확인
   Name.prototype
   // 생성
   Name.prototype.firstName = 'joj'
   // 수정 및 오염^^;;
   Array.prototype.sort = function(){
      console.log('파괴')
   }
   
```
